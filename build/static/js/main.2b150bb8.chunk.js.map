{"version":3,"sources":["hooks/fetch.js","components/ProjectCard/ProjectCard.js","pages/Projects/Projects.js","components/AnimatedText/AnimatedText.js","pages/Home/Home.js","pages/AboutThis/AboutThis.js","pages/AboutMe/AboutMe.js","components/ProjectForm/ProjectFormCreation.js","components/ProjectForm/ProjectFormDelete.js","components/ProjectForm/ProjectFormUpdate.js","components/ProjectForm/PorjectTablesConnection/ProjectClientFormConnection.js","components/ProjectForm/PorjectTablesConnection/ProjectTechlangFormConnection.js","components/ProjectForm/PorjectTablesConnection/ProjectTeamatesFormConnection.js","components/ProjectForm/ProjectFormConnection.js","components/TablesHandler/Tables/ClientCreation.js","components/TablesHandler/Tables/TamatesCreation.js","components/TablesHandler/Tables/TechlangCreation.js","components/TablesHandler/Tables/TablesCreationPaths.js","pages/AdminPanel/Admin.js","hooks/useAsyncError.js","pages/Login/Login.js","components/Mic/Mic.js","components/Social/Social.js","components/Menu/Menu.js","App.js","reportWebVitals.js","index.js","components/PDFRender/PDFrender.js","components/AnimatedText/AnimatedText.module.css","components/PDFRender/ControlPanel.js","components/PDFRender/PDFRender.module.css"],"names":["fetchApi","path","method","body","fetch","headers","JSON","stringify","then","resp","ok","json","console","log","status","error","Error","message","ProjectCard","props","data","className","name","undefined","pictures","alt","src","picture","description","description2","description3","href","target","github_link","title","icon","faGithub","size","deployed_link","faWeebly","clients","map","client","teamates","teamate","style","textDecoration","tech_lang","lang","Projects","useState","projectsInfo","setProjectsInfo","useEffect","catch","err","info","index","AnimatedText","textColor","overlayColor","children","containerElem","useRef","initialMousePos","x","y","mousePos","setMousePos","classes","animatedTextContainer","onMouseMove","event","nativeEvent","elem","current","newX","offsetX","clientWidth","newY","offsetY","clientHeight","onMouseOut","ref","color","animatedTextContent","aria-hidden","animatedTextContentClone","Home","AboutThis","pdfFile","AboutMe","ProjectFormCreation","setName","setDescription","setDescription2","setDescription3","setGithub_link","setDeployed_link","mySubmitHandler","preventDefault","confirmAlert","buttons","label","onClick","res","window","location","reload","alert","id","onSubmit","e","type","onChange","value","ProjectFormDeletion","projectDeleteId","setProjectDeleteId","projectArrayIndex","setProjectArrayIndex","findIndex","std","Number","placeholder","project","selectedProject","setSelectedProject","projectId","setProjectId","length","ProjectClientFormConnection","clientsInfo","setClientsInfo","selectedClient","setSelectedClient","clientId","setClientId","connectClientProject","ProjectTechlangFormConnection","techlangsInfo","setTechlangsInfo","selectedTechlang","setsetSelectedTechlang","techlangId","setTechlangId","connectTechlangProject","techLangId","techlang","teamatesInfo","setTeamatesInfo","selectedTeamate","setsetSelectedTeamate","teamateId","setTeamateId","connectTeamateProject","ProjectFormConnection","to","activeStyle","fontWeight","fontFamily","exact","ClientCreation","industry","setIndustry","TeamateCreation","TablesCreationPaths","Admin","credentials","setCredentials","user","useAsyncError","setError","useCallback","TokenContext","React","createContext","Login","setUser","password","setPassword","throwError","token","setToken","history","useHistory","Provider","push","htmlFor","Mic","startStop","setStartStop","micColor","setMicColor","useSpeechRecognition","onResult","result","includes","stop","listen","Social","faLinkedin","faMailchimp","Menu","fontSize","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","pdfjs","GlobalWorkerOptions","workerSrc","version","PDFRender","numPages","setNumPages","pageNumber","setPageNumber","setIsLoading","scale","setScale","handleResize","matchMedia","matches","process","browser","addEventListener","removeEventListener","pdf","pdfRender","controlPanel","fileToPrint","pdfSection","file","onLoadSuccess","module","exports","ControlPanel","componentRef","handlePrint","useReactToPrint","content","isFirstPage","isLastPage","isMinZoom","isMaxZoom","zoomOutClass","zoomInClass","firstPageClassName","lastPageClassName","controlPanelInt","panelDiv","faPrint","display","docToPrint","Array","from","element","faFastBackward","hideIcon","faBackward","text","faForward","faFastForward","faSearchMinus","toFixed","faRetweet","faSearchPlus","download","faFileDownload"],"mappings":"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","file":"static/js/main.2b150bb8.chunk.js","sourcesContent":["const fetchApi = (path, method, body) => {\n  return fetch(path, {\n    method,\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(body),\n  }).then((resp) => {\n    if (!resp.ok) {\n      return resp.json().then((json) => {\n        console.log(resp.status);\n        const error = new Error(json.message);\n        error.status = resp.status;\n        throw error;\n      });\n    }\n    return resp.json();\n  });\n};\n\nexport default fetchApi;\n","import \"./ProjectCard.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faWeebly } from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function ProjectCard(props) {\n  const { data } = props;\n  return (\n    <div className=\"projects\">\n      <div className=\"container\">\n        <div className=\"card\">\n          {/* Card Front*/}\n          <div className=\"front\">\n            {/* Title front */}\n            <div className=\"ptitle\">{data.name}</div>\n            <div className=\"line1\" />\n            <div className=\"space1\" />\n            {/* Pictures */}\n            {/* {console.log(typeof data.pictures[0].picture)} */}\n            {data.pictures[0] !== undefined ? (\n              <img alt=\"pic\" src={data.pictures[0].picture} className=\"logo\" />\n            ) : (\n              <p className=\"logo\"> Not Found </p>\n            )}\n            <div className=\"space1\" />\n            <div className=\"line1\" />\n\n            {/*Front Description  */}\n            <div className=\"desc1\">{data.description}</div>\n          </div>\n\n          {/* Card Back */}\n          <div className=\"back\">\n            {/* Title Back */}\n            <div className=\"ptitleb\">{data.name}</div>\n\n            <div className=\"line2\" />\n            {/* Description Back 1 (desc2) */}\n            {data.description2 !== \"\" && (\n              <div className=\"desc2\">{data.description2}</div>\n            )}\n            <br />\n\n            {/* Description Back 2 (desc3) */}\n            {data.description3 !== \"\" && (\n              <div className=\"desc3\">{data.description3}</div>\n            )}\n\n            <div className=\"space1\" />\n\n            <div className=\"line1\" />\n\n            <div className=\"plinks-clients\">\n              {/* Links  and clients */}\n              <div className=\"plinks\">\n                <div className=\"link-client\">Links:</div>\n\n                {/* Github Link */}\n                <div className=\"icons\">\n                  <a\n                    className=\"github\"\n                    href=\"https://github.com/SebasBar\"\n                    target=\"_blank\"\n                  ></a>\n                  {data.github_link != \"\" && (\n                    <a\n                      className=\"github\"\n                      href={data.github_link}\n                      target=\"_blank\"\n                    >\n                      <FontAwesomeIcon\n                        title=\"Website (or download file)\"\n                        icon={faGithub}\n                        size=\"3x\"\n                      />\n                    </a>\n                  )}\n\n                  {/* Deployed link */}\n                  {data.deployed_link != \"\" && (\n                    <a\n                      className=\"deployed\"\n                      href={data.deployed_link}\n                      target=\"_blank\"\n                    >\n                      <FontAwesomeIcon\n                        title=\"Website (or download file)\"\n                        icon={faWeebly}\n                        size=\"3x\"\n                      />\n                      {/* <p>Website (or download file)</p> */}\n                    </a>\n                  )}\n                </div>\n              </div>\n              {/* Clients */}\n              {data.clients != \"\" && (\n                <ul>\n                  <div className=\"link-client\">Clients:</div>\n                  {data.clients.map((client) => {\n                    return <li className=\"client\">{client.name}</li>;\n                  })}\n                </ul>\n              )}\n            </div>\n\n            {/* teamates */}\n            {data.teamates != \"\" && (\n              <>\n                <div className=\"line2\" />\n                <ul>\n                  <div className=\"teamates\">\n                    <div className=\"col-title\">Teamates:</div>\n                    <div className=\"tnames\">\n                      {data.teamates.map((teamate) => {\n                        return (\n                          <>\n                            <li className=\"team-git\">\n                              <a\n                                className=\"team-name\"\n                                style={{ textDecoration: \"none\" }}\n                                href={teamate.github_link}\n                                target=\"_blank\"\n                              >\n                                {`${teamate.name}:`}\n\n                                <FontAwesomeIcon\n                                  className=\"icon\"\n                                  title=\"Website (or download file)\"\n                                  icon={faGithub}\n                                  size=\"1x\"\n                                />\n                              </a>\n                            </li>\n                            <br />\n                          </>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </ul>\n              </>\n            )}\n\n            <div className=\"line1\" />\n            <div className=\"space1\" />\n\n            {/* Programing Languaes and Technologies used */}\n            <div className=\"pul\">\n              {data.tech_lang.map((lang) => {\n                return (\n                  <>\n                    <div title={lang.description} className=\"pli\">\n                      {lang.name}\n                    </div>\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"card\">\n        <span className=\"s1\">{data.name}</span>\n        <span className=\"s2\">card</span>\n        <div className=\"thumbnail\">\n          <img className=\"left\" src={data.pictures[0].picture} />\n        </div>\n        <div className=\"right\">\n          <div className=\"project-desc\">\n            Why you Need More Magnesium in Your Daily Diet\n          </div>\n          <div className=\"author\">\n            <img src=\"https://randomuser.me/api/portraits/men/95.jpg\" />\n            <div className=\"name\">Igor MARTY</div>\n          </div>\n          <div className=\"separator\"></div>\n          <div className=\"text\">\n            Magnesium is one of the six essential macro-minerals that is\n            required by the body for energy production and synthesis of protein\n            and enzymes. It contributes to the development of bones and most\n            importantly it is responsible for synthesis of your DNA and RNA. A\n            new report that has appeared in theBritish Journal of Cancer, gives\n            you another reason to add more magnesium to your diet...\n          </div>\n        </div>\n        <h5>12</h5>\n        <h6>JANUARY</h6>\n        <ul>\n          <li>\n            <i className=\"fa fa-eye fa-2x\"></i>\n          </li>\n          <li>\n            <i className=\"fa fa-heart-o fa-2x\"></i>\n          </li>\n          <li>\n            <i className=\"fa fa-envelope-o fa-2x\"></i>\n          </li>\n          <li>\n            <i className=\"fa fa-share-alt fa-2x\"></i>\n          </li>\n        </ul>\n        <div className=\"fab\">\n          <i className=\"fa fa-arrow-down fa-3x\"></i>\n        </div>\n      </div> */}\n\n      {/* <div className=\"projects\">\n        <div className=\"name\">{data.name}</div>\n        <div className=\"description\">Description:</div>\n        <div className=\"data-description\">{data.description}</div>\n        {data.description2 != \"\" && (\n          <div className=\"data-description\">{data.description2}</div>\n        )}\n        {data.description3 != \"\" && (\n          <div className=\"data-description\">{data.description3}</div>\n        )}\n\n        {data.github_link != \"\" && (\n          <a href={data.github_link} target=\"_blank\">\n            link to Github repo\n          </a>\n        )}\n        {data.deployed_link != \"\" && (\n          <a href={data.deployed_link} target=\"_blank\">\n            link to the website (or download file)\n          </a>\n        )}\n        {data.pictures != \"\" && (\n          <img className=\"picture\" src={data.pictures[0].picture} />\n        )}\n        <ul>\n          <div className=\"title\">Languages:</div>\n          {data.tech_lang.map((lang) => {\n            return (\n              <li className=\"languages\">{`${lang.name}: ${lang.description}`}</li>\n            );\n          })}\n        </ul>\n        {data.clients != \"\" && (\n          <ul>\n            <h3>Clients:</h3>\n            {data.clients.map((client) => {\n              return (\n                <li className=\"clients\">{`${client.name}, ${client.industry}, ${client.description}`}</li>\n              );\n            })}\n          </ul>\n        )}\n        {data.teamates != \"\" && (\n          <ul>\n            <h3>Colaborators:</h3>\n            {data.teamates.map((teamate) => {\n              return (\n                <>\n                  <li>\n                    {`${teamate.name}:`}\n                    <a\n                      href={teamate.github_link}\n                    >{` link to ${teamate.name} Github repo`}</a>\n                  </li>\n                  <br />\n                </>\n              );\n            })}\n          </ul>\n        )}\n      </div> */}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport fetchApi from \"../../hooks/fetch\";\nimport ProjectCard from \"../../components/ProjectCard/ProjectCard\";\nimport \"./project.css\";\n\nexport default function Projects() {\n  const [projectsInfo, setProjectsInfo] = useState([]);\n\n  useEffect(() => {\n    fetchApi(\"/projects/\")\n      .then((data) => {\n        console.log(data);\n        setProjectsInfo(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"space\" />\n      <div className=\"line\" />\n      <div className=\"title\">Welcome to my Projects</div>\n      <div className=\"line\" />\n      <div className=\"projects\">\n        {projectsInfo.map((info, index) => {\n          return <ProjectCard className=\"pcard\" data={info} />;\n        })}\n      </div>\n    </>\n  );\n}\n","import React, { useState, useRef } from \"react\";\n\nimport classes from \"./AnimatedText.module.css\";\n\nconst AnimatedText = ({ textColor, overlayColor, children, ...props }) => {\n  const containerElem = useRef(null);\n  const initialMousePos = { x: 0, y: 0 };\n\n  const [mousePos, setMousePos] = useState(initialMousePos);\n\n  const handleMouseMove = (event) => {\n    event = event.nativeEvent;\n    const elem = containerElem.current;\n    const newX = (event.offsetX / elem.clientWidth) * 100;\n    const newY = (event.offsetY / elem.clientHeight) * 100;\n    const newMousePos = {\n      x: newX,\n      y: newY,\n    };\n    setMousePos(newMousePos);\n  };\n\n  const handleMouseOut = () => setMousePos(initialMousePos);\n\n  return (\n    <section\n      className={classes.animatedTextContainer}\n      style={{\n        \"--maskX\": mousePos.x,\n        \"--maskY\": mousePos.y,\n      }}\n      onMouseMove={handleMouseMove}\n      onMouseOut={handleMouseOut}\n      ref={containerElem}\n      {...props}\n    >\n      <h1 style={{ color: textColor }} className={classes.animatedTextContent}>\n        {children}\n      </h1>\n      <h1\n        aria-hidden={true}\n        style={{ color: overlayColor }}\n        className={classes.animatedTextContentClone}\n      >\n        {children}\n      </h1>\n    </section>\n  );\n};\n\nexport default AnimatedText;\n","import React from \"react\";\nimport AnimatedText from \"../../components/AnimatedText/AnimatedText\";\nimport \"./home.css\";\n\nexport default function Home() {\n  return (\n    <>\n      <div className=\"site\">\n        <div className=\"presentation\">\n          <div className=\"greetings\">\n            <h1>Hi, I am</h1>\n          </div>\n          <div className=\"name\">\n            <AnimatedText textColor=\"#FF4136\" overlayColor=\"#001f3f\">\n              Sebastián\n            </AnimatedText>\n          </div>\n          <div className=\"lastname\">\n            <AnimatedText textColor=\"#001f3f\" overlayColor=\"#FF4136\">\n              Barckhahn\n            </AnimatedText>\n          </div>\n          <div className=\"subtitle\">\n            <h1>Web developer</h1>\n          </div>\n        </div>\n        <div className=\"stupid-info\">\n          <div className=\"info\">\n            This is a fullstack web application that you can navigate with your\n            voice, just press the mic and say the title of the page you want to\n            go. The site is still under construction.\n          </div>\n          <div className=\"warning\">\n            Chrome browser is recomended for voice control !!!\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./aboutthis.css\";\nimport PDFRender from \"../../components/PDFRender/PDFrender\";\n\nexport default function AboutThis() {\n  return (\n    <>\n      <div className=\"space\"></div>\n      <div className=\"space\"></div>\n      <div className=\"line\"></div>\n      <div className=\"title\">Backend</div>\n      <div className=\"space\"></div>\n      <div className=\"line\"></div>\n      <div className=\"top\">\n        <img\n          className=\"picture1\"\n          alt=\"sebas\"\n          src=\"http://localhost:8000/pics/Portfolio/Backend-Schema.png\"\n        />\n        <div className=\"text1\">\n          This is the schema of the Backend. The idea was to build a scalable\n          backend with the possibility to add more users. For now, it has just\n          one user asociated with all the projects. Each project has separate\n          tables for: pictures, teammates (with links to their git pages),\n          clients and languages used (with a description on mouse hover). <br />\n          <br />\n          Each project (from the project page) is been fetch from the backend\n          taking all the related information from the different tables!!.\n          <br />\n          It uses prisma client, bcrypt for the password encription,\n          jsonwebtoken, cookie parser, http-errors, among others.\n        </div>\n      </div>\n      <div className=\"line\"></div>\n      <div className=\"space\"></div>\n      <div className=\"top\">\n        <div className=\"text1\">\n          The application has a functional administrator panel, where the login\n          page will redirect you after enter the right credentials that are\n          encrypted with bcrypt in the credentials table. <br />\n          <br />\n          Inside the administrator panel it is possible to do al CRUD\n          operations. Also it is possible to make the connection between the\n          tables, as it is shown in the following picture:\n        </div>\n        <img\n          className=\"picture2\"\n          alt=\"sebas\"\n          src=\"http://localhost:8000/pics/Portfolio/Login.png\"\n        />\n      </div>\n      <div className=\"top\">\n        <div className=\"text1\">\n          This part of the application has no style applied and is one of the\n          future improvements to do. Also, as modify the tables require\n          administrator privileges, it is possible to get in and see the public\n          information that the backend has (as seen here in the project\n          description), but not modify the information (delete, update, or\n          create).\n          <br />\n          <br />\n          The backend schema it is built in PostgreSQL with prisma.\n        </div>\n        <img\n          className=\"picture3\"\n          alt=\"sebas\"\n          src=\"http://localhost:8000/pics/Portfolio/AdminPanel.png\"\n        />\n      </div>\n\n      <div className=\"line\"></div>\n      <div className=\"title\">Frontend</div>\n      <div className=\"space\"></div>\n      <div className=\"line\"></div>\n      <div className=\"space\"></div>\n      <div className=\"top\">\n        <img\n          className=\"picture2\"\n          alt=\"sebas\"\n          src=\"http://localhost:8000/pics/Portfolio/Title.png\"\n        />\n        <div className=\"text1\">\n          For the front end I created a css effect when the user hover over with\n          the mouse. Also I added voice control with \"react-speech-kit\" that\n          allows the user to navigate every page with voice controls. <br />{\" \"}\n          <br />\n          The voice control works better with chrome.\n        </div>\n      </div>\n      <div className=\"top\">\n        <div className=\"text1\">\n          Another cool feature this application has it is a fully functional PDF\n          reader. It has a completely custom built control panel. To achieve\n          this I used \"react-to-print\" and \"react-pdf\". <br /> <br />\n          In the near future I will upload this as an npm package, because I\n          found there is no to many options to handle PDF beside the built in\n          print functionality that each browser has. <br />\n          <br />\n          Finally, this is a list of the improvements that I think this\n          application needs: <br />\n          <ul>\n            <li>\n              Make the whole site responsive (I know it should be mobile\n              first!).\n            </li>\n            <br />\n            <li>Style the administrator panel.</li> <br />\n            <li>Error handling for backend calls (login).</li> <br />\n            <li>Fix PDF container for different zooms.</li> <br />\n          </ul>\n        </div>\n        <div className=\"pdf\">\n          <PDFRender pdfFile=\"http://localhost:8000/docs/SebastianBarckhahnResume.pdf\" />\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./AboutMe.css\";\nimport PDFRender from \"../../components/PDFRender/PDFrender\";\n\nexport default function AboutMe() {\n  return (\n    <>\n      <div className=\"space\" />\n      <div className=\"line\" />\n      <div className=\"top\">\n        <img\n          className=\"pic\"\n          alt=\"sebas\"\n          src=\"http://localhost:8000/SebasBar/cv.png\"\n        />\n        <div className=\"text1\">\n          I am Web Developer with experience in both front and back end. I have\n          participate and developed different projects that you can see in the\n          \"projects\" section of this website. I am a curious, critical and a\n          creative person with experience in different fields, with passion for\n          physics, artificial inteligence, cook, food, music and videogames.\n          Here you can check my CV and even download it with this pdf reader\n          that I created using react-pdf and a completly custom made panel ↓.\n        </div>\n      </div>\n      <div className=\"line\" />\n      <div className=\"space\" />\n      <div className=\"line\" />\n      <div className=\"bottom\">\n        <div className=\"group-text\">\n          <div className=\"text2\">\n            I have knowledge in HTML, CSS (Bootstrap, Material UI, Storybooks,\n            Styled components, Tailwind), Javascript, React, Redux, Next, Vue,\n            Nuxt, Node.js, Express, Databases (MySQL, PostgreSQL), REST API,\n            JWT, Git / GitHub, Unix, Unix Terminal and Agile methodologies\n            (Scrum, Sprint Planning, User Stories) among others working in front\n            and back end.\n          </div>\n          <div className=\"text2\">\n            My studies as an electrical engineer gave me experience in\n            electronics and the integration of different components (sensors,\n            motors and their associated programming). With my work experience as\n            an electrical engineer I acquired knowledge mainly in railway\n            signaling and power systems and I have experience as Project Manager\n            as well.\n          </div>\n        </div>\n        <div className=\"pdf\">\n          <PDFRender pdfFile=\"http://localhost:8000/docs/SebastianBarckhahnResume.pdf\" />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../hooks/fetch\";\n\nexport default function ProjectFormCreation() {\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [description2, setDescription2] = useState(null);\n  const [description3, setDescription3] = useState(null);\n  const [github_link, setGithub_link] = useState(null);\n  const [deployed_link, setDeployed_link] = useState(null);\n\n  const createProject = () => {\n    fetchApi(\"/projects\", \"POST\", {\n      name: name,\n      description: description,\n      description2: description2,\n      description3: description3,\n      github_link: github_link,\n      deployed_link: deployed_link,\n    }).then((res) => {\n      console.log(res);\n      window.location.reload();\n      alert(`You have created a project with the following fields:\n      Project ID: ${res.id}\n      Project Name: ${name}\n      Project Description A: ${description} \n      Project Description B: ${description2}\n      Project Description C: ${description3} \n      Github Link: ${github_link} \n      Deployed Link: ${deployed_link}`);\n    });\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"New Project Creation\",\n      message: \"Are you sure you want to create a new project?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            createProject();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about the New Project`),\n        },\n      ],\n    });\n  };\n  const myChangeHandlerName = (event) => {\n    setName(event.target.value);\n  };\n  const myChangeHandlerDescription = (event) => {\n    setDescription(event.target.value);\n  };\n  const myChangeHandlerDescription2 = (event) => {\n    setDescription2(event.target.value);\n  };\n  const myChangeHandlerDescription3 = (event) => {\n    setDescription3(event.target.value);\n  };\n  const myChangeHandlerGithubLink = (event) => {\n    setGithub_link(event.target.value);\n  };\n  const myChangeHandlerDeployedLink = (event) => {\n    setDeployed_link(event.target.value);\n  };\n\n  return (\n    <form onSubmit={(e) => mySubmitHandler(e)}>\n      <h1>Hello Sebas, here you can add your past projects</h1>\n      <p>Enter the required information, and submit:</p>\n      <p>Project Name</p>\n      <input type=\"text\" onChange={(e) => myChangeHandlerName(e)} />\n      <p>Project Description A</p>\n      <input type=\"text\" onChange={(e) => myChangeHandlerDescription(e)} />\n      <p>Project Description B</p>\n      <input type=\"text\" onChange={(e) => myChangeHandlerDescription2(e)} />\n      <p>Project Description C</p>\n      <input type=\"text\" onChange={(e) => myChangeHandlerDescription3(e)} />\n      <p>Github Link</p>\n      <input type=\"text\" onChange={(e) => myChangeHandlerGithubLink(e)} />\n      <p>Deployed Link</p>\n      <input type=\"text\" onChange={(e) => myChangeHandlerDeployedLink(e)} />\n      <input type=\"submit\" />\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../hooks/fetch\";\n\nexport default function ProjectFormDeletion(props) {\n  const [projectsInfo, setProjectsInfo] = useState([]);\n  const [projectDeleteId, setProjectDeleteId] = useState(null);\n  const [projectDeleteName, setProjectDeleteName] = useState(\"Project Name\");\n  const [projectDeleteDescription, setProjectDeleteDescription] = useState(\n    null\n  );\n  const [projectArrayIndex, setProjectArrayIndex] = useState(null);\n\n  useEffect(() => {\n    fetchApi(\"/projects\")\n      .then((data) => {\n        setProjectsInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  useEffect(() => {\n    setProjectArrayIndex(\n      projectsInfo.findIndex((std) => std.id === Number(projectDeleteId))\n    );\n  }, [projectDeleteId]);\n\n  const handleChangeDeleteProjectId = (event) => {\n    setProjectDeleteId(() => event.target.value);\n  };\n\n  const deleteProject = () => {\n    fetchApi(`/projects/project/${projectDeleteId}`, \"DELETE\").then((res) => {\n      console.log(res);\n      fetchApi(\"/projects\")\n        .then((data) => {\n          setProjectsInfo(data);\n          console.log(`${data}`);\n        })\n        .catch((err) => {\n          console.log(\"error\");\n        });\n      window.location.reload();\n      alert(`You deleted a project with the following fields:\n      Project ID: ${res.id}\n      Project Name: ${res.name}\n      Project Description A: ${res.description} \n      Project Description B: ${res.description2}\n      Project Description C: ${res.description3} \n      Github Link: ${res.github_link} \n      Deployed Link: ${res.deployed_link}`);\n    });\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"Project Deletion\",\n      message: `Are you sure you want to delete the Project`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            deleteProject();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about delete a Project`),\n        },\n      ],\n    });\n  };\n\n  return (\n    <form onSubmit={(e) => mySubmitHandler(e)}>\n      <h1>Hello Sebas, here you can delete any of your past projects</h1>\n      <p>Enter the required information, and submit:</p>\n      <p>Project Id</p>\n      <select\n        placeholder=\"Project\"\n        value={projectDeleteId}\n        onChange={(e) => handleChangeDeleteProjectId(e)}\n      >\n        <option>--Choose Project ID--</option>\n        {projectsInfo.map((project, index) => {\n          return <option key={index}>{project.id}</option>;\n        })}\n      </select>\n      <p>Project Name</p>\n      <textarea\n        value={\n          projectsInfo[projectArrayIndex] === undefined\n            ? \"Choose an ID first\"\n            : projectsInfo[projectArrayIndex].name\n        }\n      />\n      <p>Project Description</p>\n      <textarea\n        value={\n          projectsInfo[projectArrayIndex] === undefined\n            ? \"Choose an ID first\"\n            : projectsInfo[projectArrayIndex].description\n        }\n      />\n      <input type=\"submit\" label=\"delete\" />\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../hooks/fetch\";\n\nexport default function ProjectFormDeletion(props) {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [description2, setDescription2] = useState(\"\");\n  const [description3, setDescription3] = useState(\"\");\n  const [github_link, setGithub_link] = useState(\"\");\n  const [deployed_link, setDeployed_link] = useState(\"\");\n  const [projectsInfo, setProjectsInfo] = useState([]);\n  const [selectedProject, setSelectedProject] = useState([]);\n  const [projectId, setProjectId] = useState(-1);\n\n  useEffect(() => {\n    fetchApi(\"/projects\")\n      .then((data) => {\n        setProjectsInfo(data);\n        console.log(`${data}`);\n        console.log(`selected project: ${selectedProject.length}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchApi(`/projects/project/${projectId}`)\n      .then((data) => {\n        setSelectedProject(data);\n        console.log(`${typeof data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [projectId]);\n\n  const handleChangeUpdateProjectId = (event) => {\n    setProjectId(() => event.target.value);\n    // console.log(\"handleChangeUpdateProjectId\");\n  };\n\n  const updateProject = () => {\n    fetchApi(`/projects/project/${projectId}`, \"PUT\", {\n      name: name,\n      description: description,\n      description2: description2,\n      description3: description3,\n      github_link: github_link,\n      deployed_link: deployed_link,\n    }).then((res) => {\n      console.log(res);\n      window.location.reload();\n      alert(`You updated a project with the following fields:\n      Project ID: ${res.id}\n      Project Name: ${res.name}\n      Project Description A: ${res.description} \n      Project Description B: ${res.description2}\n      Project Description C: ${res.description3} \n      Github Link: ${res.github_link} \n      Deployed Link: ${res.deployed_link}`);\n    });\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"Project Update\",\n      message: `Are you sure you want to update the Project`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            updateProject();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about delete a Project`),\n        },\n      ],\n    });\n  };\n\n  const myChangeHandlerName = (event) => {\n    setName(event.target.value);\n  };\n  const myChangeHandlerDescription = (event) => {\n    setDescription(event.target.value);\n  };\n  const myChangeHandlerDescription2 = (event) => {\n    setDescription2(event.target.value);\n  };\n  const myChangeHandlerDescription3 = (event) => {\n    setDescription3(event.target.value);\n  };\n  const myChangeHandlerGithubLink = (event) => {\n    setGithub_link(event.target.value);\n  };\n  const myChangeHandlerDeployedLink = (event) => {\n    setDeployed_link(event.target.value);\n  };\n\n  return (\n    <form onSubmit={(e) => mySubmitHandler(e)}>\n      <h1>Hello Sebas, here you can update any of your past projects</h1>\n      <p>Enter the required information, and submit:</p>\n      <p>Project Id</p>\n      <select\n        placeholder=\"Project\"\n        value={projectId}\n        onChange={(e) => handleChangeUpdateProjectId(e)}\n      >\n        <option>--Choose Project ID--</option>\n        {projectsInfo.map((project, index) => {\n          return <option key={index}>{project.id}</option>;\n        })}\n      </select>\n      <p>Project Name</p>\n      <textarea\n        value={\n          selectedProject.length === 0\n            ? \"Choose an ID first\"\n            : selectedProject.name\n        }\n      />\n      <input type=\"text\" onChange={(e) => myChangeHandlerName(e)} />\n      <p>Project Description A</p>\n      <textarea\n        value={\n          selectedProject.length === 0\n            ? \"Choose an ID first\"\n            : selectedProject.description\n        }\n      />\n      <input type=\"text\" onChange={(e) => myChangeHandlerDescription(e)} />\n      <p>Project Description B</p>\n      <textarea\n        value={\n          selectedProject.length === 0\n            ? \"Choose an ID first\"\n            : selectedProject.description2\n        }\n      />\n      <input type=\"text\" onChange={(e) => myChangeHandlerDescription2(e)} />\n      <p>Project Description C</p>\n      <textarea\n        value={\n          selectedProject.length === 0\n            ? \"Choose an ID first\"\n            : selectedProject.description3\n        }\n      />\n      <input type=\"text\" onChange={(e) => myChangeHandlerDescription3(e)} />\n      <p>Github Link</p>\n      <textarea\n        value={\n          selectedProject.length === 0\n            ? \"Choose an ID first\"\n            : selectedProject.github_link\n        }\n      />\n      <input type=\"text\" onChange={(e) => myChangeHandlerGithubLink(e)} />\n      <p>Deployed Link</p>\n      <textarea\n        value={\n          selectedProject.length === 0\n            ? \"Choose an ID first\"\n            : selectedProject.deployed_link\n        }\n      />\n      <input type=\"text\" onChange={(e) => myChangeHandlerDeployedLink(e)} />\n      <input type=\"submit\" label=\"update\" />\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../../hooks/fetch\";\n\nexport default function ProjectClientFormConnection() {\n  const [projectsInfo, setProjectsInfo] = useState([]);\n  const [selectedProject, setSelectedProject] = useState([]);\n  const [projectId, setProjectId] = useState();\n\n  const [clientsInfo, setClientsInfo] = useState([]);\n  const [selectedClient, setSelectedClient] = useState([]);\n  const [clientId, setClientId] = useState(null);\n\n  useEffect(() => {\n    fetchApi(\"/projects\")\n      .then((data) => {\n        setProjectsInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n    fetchApi(\"/clients\")\n      .then((data) => {\n        setClientsInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchApi(`/projects/project/${projectId}`)\n      .then((data) => {\n        setSelectedProject(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [projectId]);\n\n  useEffect(() => {\n    fetchApi(`/clients/${clientId}`)\n      .then((data) => {\n        setSelectedClient(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [clientId]);\n\n  const handleProjectId = (event) => {\n    setProjectId(() => event.target.value);\n  };\n\n  const handleChangeClientId = (event) => {\n    setClientId(() => event.target.value);\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"Project Update\",\n      message: `Are you sure you want to update the Project`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            connectClientProject();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about delete a Project`),\n        },\n      ],\n    });\n  };\n\n  const connectClientProject = () => {\n    fetchApi(`/projects/client/${projectId}`, \"PUT\", {\n      clientId: Number(clientId),\n    }).then((res) => {\n      console.log(projectId);\n      alert(`You connected the clientId: ${clientId} name: ${selectedClient.name} \n      with the project ID: ${projectId}`);\n    });\n  };\n\n  return (\n    <>\n      <form>\n        <h1>Here you can connect the projects with the rest of the tables</h1>\n        <p>Here you can look for an specific project</p>\n        <p>Project Id</p>\n        <select\n          placeholder=\"Project\"\n          value={projectId}\n          onChange={(e) => handleProjectId(e)}\n        >\n          <option>--Choose Project ID--</option>\n          {projectsInfo.map((project, index) => {\n            return <option key={index}>{project.id}</option>;\n          })}\n        </select>\n        <p>Project Name</p>\n        <textarea\n          value={\n            selectedProject.length === 0\n              ? \"Choose an ID first\"\n              : selectedProject.name\n          }\n        />\n        <p>Project Description</p>\n        <textarea\n          value={\n            selectedProject.length === 0\n              ? \"Choose an ID first\"\n              : selectedProject.description\n          }\n        />\n      </form>\n      <form onSubmit={(e) => mySubmitHandler(e)}>\n        <p>Here you can look for an specific client and then connect them</p>\n        <p>Client Id</p>\n        <select\n          placeholder=\"Client\"\n          value={clientId}\n          onChange={(e) => handleChangeClientId(e)}\n        >\n          <option>--Choose Client ID--</option>\n          {clientsInfo.map((client, index) => {\n            return <option key={index}>{client.id}</option>;\n          })}\n        </select>\n        <p>Client Name</p>\n        <textarea\n          value={\n            selectedClient.length === 0\n              ? \"Choose an ID first\"\n              : selectedClient.name\n          }\n        />\n        <p>Client Description</p>\n        <textarea\n          value={\n            selectedClient.length === 0\n              ? \"Choose an ID first\"\n              : selectedClient.description\n          }\n        />\n        <input type=\"submit\" label=\"connect\" />\n      </form>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../../hooks/fetch\";\n\nexport default function ProjectTechlangFormConnection() {\n  const [projectsInfo, setProjectsInfo] = useState([]);\n  const [selectedProject, setSelectedProject] = useState([]);\n  const [projectId, setProjectId] = useState();\n\n  const [techlangsInfo, setTechlangsInfo] = useState([]);\n  const [selectedTechlang, setsetSelectedTechlang] = useState([]);\n  const [techlangId, setTechlangId] = useState(null);\n\n  useEffect(() => {\n    fetchApi(\"/projects\")\n      .then((data) => {\n        setProjectsInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n    fetchApi(\"/techlangs\")\n      .then((data) => {\n        setTechlangsInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchApi(`/projects/project/${projectId}`)\n      .then((data) => {\n        setSelectedProject(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [projectId]);\n\n  useEffect(() => {\n    fetchApi(`/techlangs/${techlangId}`)\n      .then((data) => {\n        setsetSelectedTechlang(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [techlangId]);\n\n  const handleProjectId = (event) => {\n    setProjectId(() => event.target.value);\n  };\n\n  const handleChangeTechLangId = (event) => {\n    setTechlangId(() => event.target.value);\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"Project Update\",\n      message: `Are you sure you want to update the Project`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            connectTechlangProject();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () =>\n            alert(`You can rethink about connect Tech Lang with a Project`),\n        },\n      ],\n    });\n  };\n\n  const connectTechlangProject = () => {\n    fetchApi(`/projects/techlang/${projectId}`, \"PUT\", {\n      techLangId: Number(techlangId),\n    }).then((res) => {\n      console.log(projectId);\n      alert(`You connected the clientId: ${techlangId} name: ${selectedTechlang.name} \n      with the project ID: ${projectId}`);\n    });\n  };\n\n  return (\n    <>\n      <form>\n        <h1>Here you can connect the projects with the rest of the tables</h1>\n        <p>Here you can look for an specific project</p>\n        <p>Project Id</p>\n        <select\n          placeholder=\"Project\"\n          value={projectId}\n          onChange={(e) => handleProjectId(e)}\n        >\n          <option>--Choose Project ID--</option>\n          {projectsInfo.map((project, index) => {\n            return <option key={index}>{project.id}</option>;\n          })}\n        </select>\n        <p>Project Name</p>\n        <textarea\n          value={\n            selectedProject.length === 0\n              ? \"Choose an ID first\"\n              : selectedProject.name\n          }\n        />\n        <p>Project Description</p>\n        <textarea\n          value={\n            selectedProject.length === 0\n              ? \"Choose an ID first\"\n              : selectedProject.description\n          }\n        />\n      </form>\n      <form onSubmit={(e) => mySubmitHandler(e)}>\n        <p>Here you can look for an specific techlang and then connect them</p>\n        <p>Tech Lang Id</p>\n        <select\n          placeholder=\"Techlang\"\n          value={techlangId}\n          onChange={(e) => handleChangeTechLangId(e)}\n        >\n          <option>--Choose Client ID--</option>\n          {techlangsInfo.map((techlang, index) => {\n            return <option key={index}>{techlang.id}</option>;\n          })}\n        </select>\n        <p>Techlang Name</p>\n        <textarea\n          value={\n            selectedTechlang.length === 0\n              ? \"Choose an ID first\"\n              : selectedTechlang.name\n          }\n        />\n        <p>TechLang Description</p>\n        <textarea\n          value={\n            selectedTechlang.length === 0\n              ? \"Choose an ID first\"\n              : selectedTechlang.description\n          }\n        />\n        <input type=\"submit\" label=\"connect\" />\n      </form>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../../hooks/fetch\";\n\nexport default function ProjectTechlangFormConnection() {\n  const [projectsInfo, setProjectsInfo] = useState([]);\n  const [selectedProject, setSelectedProject] = useState([]);\n  const [projectId, setProjectId] = useState();\n\n  const [teamatesInfo, setTeamatesInfo] = useState([]);\n  const [selectedTeamate, setsetSelectedTeamate] = useState([]);\n  const [teamateId, setTeamateId] = useState(null);\n\n  useEffect(() => {\n    fetchApi(\"/projects\")\n      .then((data) => {\n        setProjectsInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n    fetchApi(\"/techlangs\")\n      .then((data) => {\n        setTeamatesInfo(data);\n        console.log(`${data}`);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchApi(`/projects/project/${projectId}`)\n      .then((data) => {\n        setsetSelectedTeamate(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [projectId]);\n\n  useEffect(() => {\n    fetchApi(`/teamates/${teamateId}`)\n      .then((data) => {\n        setsetSelectedTeamate(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [teamateId]);\n\n  const handleProjectId = (event) => {\n    setProjectId(() => event.target.value);\n  };\n\n  const handleChangeTeamate = (event) => {\n    setTeamateId(() => event.target.value);\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"Project Update\",\n      message: `Are you sure you want to update the Project`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            connectTeamateProject();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () =>\n            alert(`You can rethink about connect Tech Lang with a Project`),\n        },\n      ],\n    });\n  };\n\n  const connectTeamateProject = () => {\n    fetchApi(`/projects/teamate/${projectId}`, \"PUT\", {\n      teamateId: Number(teamateId),\n    }).then((res) => {\n      console.log(projectId);\n      alert(`You connected the teamateId: ${teamateId} name: ${selectedTeamate.name} \n      with the project ID: ${projectId}`);\n    });\n  };\n\n  return (\n    <>\n      <form>\n        <h1>Here you can connect the projects with the rest of the tables</h1>\n        <p>Here you can look for an specific project</p>\n        <p>Project Id</p>\n        <select\n          placeholder=\"Project\"\n          value={projectId}\n          onChange={(e) => handleProjectId(e)}\n        >\n          <option>--Choose Project ID--</option>\n          {projectsInfo.map((project, index) => {\n            return <option key={index}>{project.id}</option>;\n          })}\n        </select>\n        <p>Project Name</p>\n        <textarea\n          value={\n            selectedProject.length === 0\n              ? \"Choose an ID first\"\n              : selectedProject.name\n          }\n        />\n        <p>Project Description</p>\n        <textarea\n          value={\n            selectedProject.length === 0\n              ? \"Choose an ID first\"\n              : selectedProject.description\n          }\n        />\n      </form>\n      <form onSubmit={(e) => mySubmitHandler(e)}>\n        <p>Here you can look for an specific teamate and then connect them</p>\n        <p>Teamate Id</p>\n        <select\n          placeholder=\"Teamate\"\n          value={teamateId}\n          onChange={(e) => handleChangeTeamate(e)}\n        >\n          <option>--Choose Teamate ID--</option>\n          {teamatesInfo.map((teamate, index) => {\n            return <option key={index}>{teamate.id}</option>;\n          })}\n        </select>\n        <p>Teamate Name</p>\n        <textarea\n          value={\n            selectedTeamate.length === 0\n              ? \"Choose an ID first\"\n              : selectedTeamate.name\n          }\n        />\n        <p>Teamate Github Link</p>\n        <textarea\n          value={\n            selectedTeamate.length === 0\n              ? \"Choose an ID first\"\n              : selectedTeamate.github_link\n          }\n        />\n        <input type=\"submit\" label=\"connect\" />\n      </form>\n    </>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport ProjectClientFormConnection from \"../ProjectForm/PorjectTablesConnection/ProjectClientFormConnection\";\nimport ProjectTechlangFormConnection from \"../ProjectForm/PorjectTablesConnection/ProjectTechlangFormConnection\";\nimport ProjectTeamateFormConnection from \"../ProjectForm/PorjectTablesConnection/ProjectTeamatesFormConnection\";\n\nexport default function ProjectFormConnection() {\n  return (\n    <Router>\n      <nav className=\"menu\">\n        <NavLink\n          to=\"/admin/projectconnection/clientproject\"\n          activeStyle={{\n            fontWeight: \"bold\",\n            color: \"red\",\n            textDecoration: \"underline\",\n          }}\n          style={{\n            textDecoration: \"none\",\n            color: \"#001f3f\",\n            fontFamily: \"Raleway, sans-serif\",\n          }}\n        >\n          <h2 className=\"menu-link\">Client-Project</h2>\n        </NavLink>\n        <NavLink\n          to=\"/admin/projectconnection/techlangproject\"\n          activeStyle={{\n            fontWeight: \"bold\",\n            color: \"red\",\n            textDecoration: \"underline\",\n          }}\n          style={{\n            textDecoration: \"none\",\n            color: \"#001f3f\",\n            fontFamily: \"Raleway, sans-serif\",\n          }}\n        >\n          <h2 className=\"menu-link\">Techlang-Project</h2>\n        </NavLink>\n        <NavLink\n          to=\"/admin/projectconnection/teamateproject\"\n          activeStyle={{\n            fontWeight: \"bold\",\n            color: \"red\",\n            textDecoration: \"underline\",\n          }}\n          style={{\n            textDecoration: \"none\",\n            color: \"#001f3f\",\n            fontFamily: \"Raleway, sans-serif\",\n          }}\n        >\n          <h2 className=\"menu-link\">Teamate-Project</h2>\n        </NavLink>\n      </nav>\n      <Switch>\n        <Route exact path=\"/admin/projectconnection/clientproject\">\n          <ProjectClientFormConnection />\n        </Route>\n        <Route exact path=\"/admin/projectconnection/techlangproject\">\n          <ProjectTechlangFormConnection />\n        </Route>\n        <Route exact path=\"/admin/projectconnection/teamateproject\">\n          <ProjectTeamateFormConnection />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React, { useState } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../../hooks/fetch\";\n\nexport default function ClientCreation() {\n  const [name, setName] = useState(null);\n  const [industry, setIndustry] = useState(null);\n  const [description, setDescription] = useState(null);\n\n  const createClient = () => {\n    fetchApi(\"/clients\", \"POST\", {\n      name: name,\n      industry: industry,\n      description: description,\n    }).then((res) => {\n      console.log(res);\n      alert(`You have created a client with the following fields:\n      Client ID: ${res.id}\n      Client Name: ${name}\n      Client Industry: ${industry}\n      Client A: ${description} `);\n    });\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"New Client Creation\",\n      message: \"Are you sure you want to create a new client?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            createClient();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about the New Client`),\n        },\n      ],\n    });\n  };\n  const myChangeHandlerName = (event) => {\n    setName(event.target.value);\n  };\n  const myChangeHandlerIndustry = (event) => {\n    setIndustry(event.target.value);\n  };\n  const myChangeHandlerDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={(e) => mySubmitHandler(e)}>\n        <h1>Hello Sebas, here you can add new clients to the Client Table</h1>\n        <p>Enter the required information, and submit:</p>\n        <p>Client Name</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerName(e)} />\n        <p>Client Industry</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerIndustry(e)} />\n        <p>Project Description</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerDescription(e)} />\n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../../hooks/fetch\";\n\nexport default function TeamateCreation() {\n  const [name, setName] = useState(null);\n  const [github_link, setGithub_link] = useState(null);\n\n  const createTeamate = () => {\n    fetchApi(\"/teamates\", \"POST\", {\n      name: name,\n      github_link: github_link,\n    }).then((res) => {\n      console.log(res);\n      alert(`You have created a client with the following fields:\n      Teamate ID: ${res.id}\n      Teamate Name: ${name}\n      Teamate Github Link: ${github_link}`);\n    });\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"New Teamate Creation\",\n      message: \"Are you sure you want to create a new teamate?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            createTeamate();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about the New Teamate`),\n        },\n      ],\n    });\n  };\n  const myChangeHandlerName = (event) => {\n    setName(event.target.value);\n  };\n  const myChangeHandlerGithub = (event) => {\n    setGithub_link(event.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={(e) => mySubmitHandler(e)}>\n        <h1>Hello Sebas, here you can add new teamates to the Client Table</h1>\n        <p>Enter the required information, and submit:</p>\n        <p>Teamate Name</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerName(e)} />\n        <p>Teamate Github Link</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerGithub(e)} />\n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport fetchApi from \"../../../hooks/fetch\";\n\nexport default function ClientCreation() {\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n\n  const createTechlang = () => {\n    fetchApi(\"/techlangs\", \"POST\", {\n      name: name,\n      description: description,\n    }).then((res) => {\n      console.log(res);\n      alert(`You have created a client with the following fields:\n      Tech Lang ID: ${res.id}\n      Tech Lang Name: ${name}\n      Tech Lang: ${description} `);\n    });\n  };\n\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n    confirmAlert({\n      title: \"New Tech Lang Creation\",\n      message: \"Are you sure you want to create a new Tech Lang?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            createTechlang();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => alert(`You can rethink about the New Tech Lang`),\n        },\n      ],\n    });\n  };\n  const myChangeHandlerName = (event) => {\n    setName(event.target.value);\n  };\n\n  const myChangeHandlerDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={(e) => mySubmitHandler(e)}>\n        <h1>Hello Sebas, here you can add new Tech Lang to the Client Table</h1>\n        <p>Enter the required information, and submit:</p>\n        <p>Tech Lang Name</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerName(e)} />\n        <p>Tech Lang Description</p>\n        <input type=\"text\" onChange={(e) => myChangeHandlerDescription(e)} />\n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\n\nimport ClientCreation from \"./ClientCreation\";\nimport TeamatesCreation from \"./TamatesCreation\";\nimport TechlangCreation from \"./TechlangCreation\";\n\nexport default function TablesCreationPaths() {\n  return (\n    <>\n      <Router>\n        <nav className=\"menu\">\n          <NavLink\n            to=\"/admin/tables/clientcreation\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n            style={{\n              textDecoration: \"none\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n            }}\n          >\n            <h2 className=\"menu-link\">Client Creation</h2>\n          </NavLink>\n          <NavLink\n            to=\"/admin/tables/teamatecreation\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n            style={{\n              textDecoration: \"none\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n            }}\n          >\n            <h2 className=\"menu-link\">Teamate Creation</h2>\n          </NavLink>\n          <NavLink\n            to=\"/admin/tables/techlangcreation\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n            style={{\n              textDecoration: \"none\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n            }}\n          >\n            <h2 className=\"menu-link\">Tech Lang Creation</h2>\n          </NavLink>\n        </nav>\n        <Switch>\n          <Route exact path=\"/admin/tables/clientcreation\">\n            <ClientCreation />\n          </Route>\n          <Route exact path=\"/admin/tables/teamatecreation\">\n            <TeamatesCreation />\n          </Route>\n          <Route exact path=\"/admin/tables/techlangcreation\">\n            <TechlangCreation />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport ProjectFormCreation from \"../../components/ProjectForm/ProjectFormCreation\";\nimport ProjectFormDeletion from \"../../components/ProjectForm/ProjectFormDelete\";\nimport ProjectFormUpdate from \"../../components/ProjectForm/ProjectFormUpdate\";\nimport ProjectFormConnection from \"../../components/ProjectForm/ProjectFormConnection\";\n\nimport TableCreationPaths from \"../../components/TablesHandler/Tables/TablesCreationPaths\";\n\nexport default function Admin() {\n  const [credentials, setCredentials] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/sebasbar/credentials\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(`Data received: ${data.user}`);\n        setCredentials(data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  return (\n    <>\n      <>\n        <h1>Welcome to the Adminstrator Panel</h1>\n        <h2>\n          {credentials.user !== undefined\n            ? \"Welcome SebasBar! Good to see you :)\"\n            : \"You are not the Administrator, but you can still check the information of the DB\"}\n        </h2>\n        {/* {credentials.user !== undefined ? ( */}\n        <Router>\n          <nav className=\"menu\">\n            <NavLink\n              to=\"/admin/projectcreation\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"red\",\n                textDecoration: \"underline\",\n              }}\n              style={{\n                textDecoration: \"none\",\n                color: \"#001f3f\",\n                fontFamily: \"Raleway, sans-serif\",\n              }}\n            >\n              <h2 className=\"menu-link\">Create Project</h2>\n            </NavLink>\n            <NavLink\n              to=\"/admin/projectupdate/\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"red\",\n                textDecoration: \"underline\",\n              }}\n              style={{\n                textDecoration: \"none\",\n                color: \"#001f3f\",\n                fontFamily: \"Raleway, sans-serif\",\n              }}\n            >\n              <h2 className=\"menu-link\">Project Update</h2>\n            </NavLink>\n            <NavLink\n              to=\"/admin/deleteproject/\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"red\",\n                textDecoration: \"underline\",\n              }}\n              style={{\n                textDecoration: \"none\",\n                color: \"#001f3f\",\n                fontFamily: \"Raleway, sans-serif\",\n              }}\n            >\n              <h2 className=\"menu-link\">Delete Project</h2>\n            </NavLink>\n            <NavLink\n              to=\"/admin/tables\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"red\",\n                textDecoration: \"underline\",\n              }}\n              style={{\n                textDecoration: \"none\",\n                color: \"#001f3f\",\n                fontFamily: \"Raleway, sans-serif\",\n              }}\n            >\n              <h2 className=\"menu-link\">Manage Tables</h2>\n            </NavLink>\n            <NavLink\n              to=\"/admin/projectconnection\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"red\",\n                textDecoration: \"underline\",\n              }}\n              style={{\n                textDecoration: \"none\",\n                color: \"#001f3f\",\n                fontFamily: \"Raleway, sans-serif\",\n              }}\n            >\n              <h2 className=\"menu-link\">Connect Projects and Tables</h2>\n            </NavLink>\n          </nav>\n          <Switch>\n            <Route exact path=\"/admin/projectcreation\">\n              <ProjectFormCreation />\n            </Route>\n            <Route exact path=\"/admin/projectupdate/\">\n              <ProjectFormUpdate />\n            </Route>\n            <Route exact path=\"/admin/deleteproject/\">\n              <ProjectFormDeletion />\n            </Route>\n            <Route exact path=\"/admin/tables/\">\n              <TableCreationPaths />\n            </Route>\n            <Route exact path=\"/admin/projectconnection\">\n              <ProjectFormConnection />\n            </Route>\n          </Switch>\n        </Router>\n        {/* ) : ( <h1> You have to been Logged In</h1>\n        )} */}\n      </>\n    </>\n  );\n}\n","import { useState, useCallback } from \"react\";\n\nconst useAsyncError = () => {\n  const [_, setError] = useState();\n  return useCallback(\n    (e) => {\n      setError(() => {\n        throw e;\n      });\n    },\n    [setError]\n  );\n};\n\nexport default useAsyncError;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useAsyncError from \"../../hooks/useAsyncError\";\nimport fetchApi from \"../../hooks/fetch\";\nimport \"./Login.css\";\n\nexport const TokenContext = React.createContext();\n\nexport default function Login() {\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const throwError = useAsyncError();\n  const [token, setToken] = useState(false);\n\n  const history = useHistory();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    console.log(\"login function\");\n    fetch(`/auth/login/1`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ user, password }),\n    }).then((resp) => {\n      if (!resp.ok) {\n        resp.json().then((json) => {\n          const error = new Error(json.message);\n          error.status = resp.status;\n          throwError(error);\n        });\n      } else {\n        setToken(true);\n        history.push(\"/admin\");\n      }\n    });\n  };\n\n  return (\n    <TokenContext.Provider value={token}>\n      <div className=\"login-wrapper\">\n        <h1>Login</h1>\n        <form onSubmit={handleLogin}>\n          <label htmlFor=\"user\">User: </label>\n          <input\n            type=\"user\"\n            placeholder=\"john doe\"\n            value={user}\n            onChange={(e) => setUser(e.target.value)}\n          ></input>\n          <br />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            placeholder=\"Type your password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></input>\n          <br />\n\n          <input type=\"submit\" value=\"Login\"></input>\n        </form>\n      </div>\n    </TokenContext.Provider>\n  );\n}\n","import { useSpeechRecognition } from \"react-speech-kit\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free\";\nimport \"./Mic.css\";\n\nexport default function Mic() {\n  const [startStop, setStartStop] = useState(true);\n  const [micColor, setMicColor] = useState(\"fa fa-microphone fa-3x mic-color\");\n\n  const history = useHistory();\n\n  const onResult = (result) => {\n    console.log(result);\n    if (result.includes(\"project\" || \"Project\" || \"projects\" || \"Projects\")) {\n      console.log(`The word \"project\" was recognized: ${result}`);\n      stop();\n      setStartStop(true);\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      history.push(\"/pfprojects\");\n    }\n    if (result.includes(\"about this\" || \"About this\")) {\n      // history.push(\"/projects\");\n      console.log(`The phrase \"about this\" was recognized: ${result}`);\n      stop();\n      setStartStop(true);\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      history.push(\"/aboutthis\");\n    }\n    if (result.includes(\"about me\" || \"About me\")) {\n      // history.push(\"/projects\");\n      console.log(`The phrase \"about me\" was recognized: ${result}`);\n      stop();\n      setStartStop(true);\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      history.push(\"/aboutme\");\n    }\n    if (result.includes(\"administrador\" || \"Administrador\")) {\n      // history.push(\"/projects\");\n      console.log(`The word \"administrador\" was recognized: ${result}`);\n      stop();\n      setStartStop(true);\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      history.push(\"/admin\");\n    }\n    if (result.includes(\"login\" || \"Login\")) {\n      // history.push(\"/projects\");\n      console.log(`The word \"login\" was recognized: ${result}`);\n      stop();\n      setStartStop(true);\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      history.push(\"/login\");\n    }\n    if (result.includes(\"home\" || \"Home\")) {\n      // history.push(\"/projects\");\n      console.log(`The word \"home\" was recognized: ${result}`);\n      stop();\n      setStartStop(true);\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      history.push(\"/\");\n    }\n  };\n\n  const { listen, stop } = useSpeechRecognition({\n    onResult,\n  });\n\n  const micActivation = () => {\n    if (startStop === true) {\n      listen();\n      setMicColor(\"fa fa-microphone fa-3x mic-color-active\");\n      setStartStop(false);\n    } else {\n      stop();\n      setMicColor(\"fa fa-microphone fa-3x mic-color\");\n      setStartStop(true);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mic\">\n        <p className=\"legend\">Press here and → say which page to go</p>\n        <div className=\"mic-pad\">\n          <button className={micColor} onClick={micActivation}></button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./Social.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faGithub,\n  faMailchimp,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function Social() {\n  return (\n    <div className=\"msocial\">\n      <div className=\"mlinks\">\n        <a\n          className=\"linkedin\"\n          href=\"https://www.linkedin.com/in/sebastianbarckhahn\"\n          target=\"_blank\"\n        >\n          <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n        </a>\n        <a\n          className=\"mgithub\"\n          href=\"https://github.com/SebasBar\"\n          target=\"_blank\"\n        >\n          <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n        </a>\n        <a\n          className=\"mail\"\n          href=\"mailto: sdbarckhahn@gmail.com\"\n          target=\"_blank\"\n        >\n          <FontAwesomeIcon icon={faMailchimp} size=\"2x\" />\n        </a>\n      </div>\n      <div className=\"text\">my social media</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport \"./Menu.css\";\n\nimport Projects from \"../../pages/Projects/Projects\";\nimport Home from \"../../pages/Home/Home\";\nimport AboutThis from \"../../pages/AboutThis/AboutThis\";\nimport AboutMe from \"../../pages/AboutMe/AboutMe\";\nimport Admin from \"../../pages/AdminPanel/Admin\";\nimport Login from \"../../pages/Login/Login\";\nimport Mic from \"../../components/Mic/Mic\";\nimport Social from \"../../components/Social/Social\";\n\nexport default function Menu() {\n  return (\n    <Router>\n      <div className=\"menu-social-mic\">\n        <nav className=\"menu\">\n          <Social />\n          <NavLink\n            to=\"/pfprojects\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n            style={{\n              textDecoration: \"none\",\n              fontWeight: \"bold\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n              fontSize: \"25px\",\n            }}\n          >\n            <h2 className=\"menu-link\">Projects</h2>\n          </NavLink>\n          <NavLink\n            to=\"/aboutthis\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n            style={{\n              textDecoration: \"none\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n              fontSize: \"25px\",\n            }}\n          >\n            <h2 className=\"menu-link\">About this Site</h2>\n          </NavLink>\n          <NavLink\n            to=\"/aboutme\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n            style={{\n              textDecoration: \"none\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n              fontSize: \"25px\",\n            }}\n          >\n            <h2 className=\"menu-link\">About Me</h2>\n          </NavLink>\n          <NavLink\n            exact={true}\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"#001f3f\",\n              fontFamily: \"Raleway, sans-serif\",\n              fontSize: \"25px\",\n            }}\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n              textDecoration: \"underline\",\n            }}\n          >\n            <h2 className=\"menu-link\">Home</h2>\n          </NavLink>\n        </nav>\n        <div className=\"mic\">\n          <Mic />\n        </div>\n      </div>\n      <Switch>\n        <Route exact path=\"/pfprojects\">\n          <Projects />\n        </Route>\n        <Route exact path=\"/aboutthis\">\n          <AboutThis />\n        </Route>\n        <Route exact path=\"/aboutme\">\n          <AboutMe />\n        </Route>\n        <Route exact path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Menu from \"./components/Menu/Menu\";\n// import Footer from \"./components/Footer/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <Menu />\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState, useEffect } from \"react\";\nimport ControlPanel from \"./ControlPanel\";\nimport pdf from \"./PDFRender.module.css\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport const PDFRender = (props) => {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [scale, setScale] = useState(1);\n\n  const { pdfFile } = props;\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n\n  // this will change the scale of the PDF based on window's resize\n  useEffect(() => {\n    if (process.browser) {\n      window.addEventListener(\"resize\", handleResize);\n      return () => {\n        window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, []);\n\n  function handleResize() {\n    if (window.matchMedia(\"(max-width: 640px)\").matches) {\n      setScale(0.75);\n    } else {\n      setScale(1);\n    }\n  }\n\n  return (\n    <div>\n      {!process.browser && <h1>BROWSER123</h1>}\n      <section className={pdf.pdfRender} id=\"navbar\">\n        <div className={pdf.controlPanel}>\n          <ControlPanel\n            numPages={numPages}\n            pageNumber={pageNumber}\n            setPageNumber={setPageNumber}\n            scale={scale}\n            setScale={setScale}\n            fileToPrint={pdfFile}\n          />\n        </div>\n        <div className={pdf.pdfSection}>\n          <Document file={pdfFile} onLoadSuccess={onDocumentLoadSuccess}>\n            <div>\n              <Page pageNumber={pageNumber} scale={scale} />\n            </div>\n          </Document>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default PDFRender;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animatedTextContainer\":\"AnimatedText_animatedTextContainer__2QkyW\",\"animatedTextContent\":\"AnimatedText_animatedTextContent__1qLKV\",\"animatedTextContentClone\":\"AnimatedText_animatedTextContentClone__2bgoi AnimatedText_animatedTextContent__1qLKV\"};","import React, { useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { Document, Page } from \"react-pdf\";\nimport pdf from \"./PDFRender.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFastBackward,\n  faBackward,\n  faForward,\n  faFastForward,\n  faPrint,\n  faSearchMinus,\n  faRetweet,\n  faSearchPlus,\n  faFileDownload,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ControlPanel = (props) => {\n  const {\n    numPages,\n    pageNumber,\n    setPageNumber,\n    scale,\n    setScale,\n    fileToPrint,\n  } = props;\n\n  //print\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  //max values\n\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n\n  const isMinZoom = scale <= 0.25;\n  const isMaxZoom = scale >= 3.0;\n\n  //dinamic classes\n\n  const zoomOutClass = isMinZoom ? \"disabled\" : \"clickable\";\n  const zoomInClass = isMaxZoom ? \"disabled\" : \"clickable\";\n\n  const firstPageClassName = isFirstPage ? \"disable\" : \"clickable\";\n  const lastPageClassName = isLastPage ? \"disable\" : \"clickable\";\n\n  //page number control\n\n  const goToFirstPage = () => {\n    if (!isFirstPage) setPageNumber(1);\n  };\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber((pageNumber) => pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber((pageNumber) => pageNumber + 1);\n  };\n  const goToLastPage = () => {\n    if (!isLastPage) setPageNumber(numPages);\n    console.log(numPages);\n  };\n  const onPageChange = (event) => {\n    const { value } = event.target;\n    if (Number(value) <= numPages) {\n      setPageNumber(Number(value));\n    } else setPageNumber(1);\n  };\n\n  //zoom control\n\n  const zoomIn = () => {\n    if (!isMaxZoom) {\n      setScale(scale + 0.25);\n    }\n  };\n\n  const zoomOut = () => {\n    if (!isMinZoom) {\n      setScale(scale - 0.25);\n    }\n  };\n\n  const resetZoom = () => {\n    setScale(1.0);\n  };\n\n  return (\n    <div className={pdf.controlPanelInt}>\n      <div className={pdf.panelDiv}>\n        <FontAwesomeIcon\n          icon={faPrint}\n          className=\"control-panel-icon\"\n          onClick={() => {\n            handlePrint();\n            console.log(\"Printing...\");\n          }}\n        />\n      </div>\n      <div className={pdf.panelDiv}>\n        <div style={{ display: \"none\" }} className={pdf.docToPrint}>\n          <Document file={fileToPrint} ref={componentRef}>\n            {Array.from(new Array(numPages), (element, index) => (\n              <Page key={`page_${index + 1}`} pageNumber={index + 1} />\n            ))}\n          </Document>\n          );\n        </div>\n\n        {/* document page control backward */}\n        <FontAwesomeIcon\n          icon={faFastBackward}\n          className={`mr-1 ${pdf.element} ${firstPageClassName} ${pdf.hideIcon}`}\n          onClick={goToFirstPage}\n        />\n        <FontAwesomeIcon\n          icon={faBackward}\n          className={`mr-1 ${pdf.element} ${firstPageClassName}`}\n          onClick={goToPreviousPage}\n        />\n        {/* page display */}\n        <span className={`${pdf.element} ${pdf.text}`}>\n          Page{\" \"}\n          <input\n            name=\"pageNumber\"\n            size=\"1\"\n            className={`${pdf.pageNumber} ${pdf.element} ${pdf.text}`}\n            value={pageNumber}\n            onChange={onPageChange}\n          />{\" \"}\n          of {numPages}\n        </span>\n        {/* document page control forward */}\n        <FontAwesomeIcon\n          icon={faForward}\n          className={`mr-1 ${pdf.element} ${lastPageClassName}`}\n          onClick={goToNextPage}\n        />\n        <FontAwesomeIcon\n          icon={faFastForward}\n          className={`mr-1 ${pdf.element} ${lastPageClassName}  ${pdf.hideIcon}`}\n          onClick={goToLastPage}\n        />\n      </div>\n      <div className={pdf.panelDiv}>\n        {/* zoom control */}\n        <FontAwesomeIcon\n          icon={faSearchMinus}\n          className={`mr-1 ${pdf.element} ${zoomOutClass}`}\n          onClick={zoomOut}\n        />\n        <span className={pdf.text}> {(scale * 100).toFixed()}% </span>\n        <FontAwesomeIcon\n          icon={faRetweet}\n          className={`mx-1 ${pdf.element} ${zoomOutClass} ${pdf.hideIcon}`}\n          onClick={resetZoom}\n        />\n        <FontAwesomeIcon\n          icon={faSearchPlus}\n          className={`${pdf.element} ${zoomInClass}`}\n          onClick={zoomIn}\n        />\n\n        {/* Download */}\n        <a className={`${pdf.element}`} href={fileToPrint} download>\n          <FontAwesomeIcon icon={faFileDownload} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"PDFRender_loader__23bd3\",\"pdfRender\":\"PDFRender_pdfRender__1IyXz\",\"pdfSection\":\"PDFRender_pdfSection__3PU0e\",\"controlPanel\":\"PDFRender_controlPanel__OCMso\",\"controlPanelInt\":\"PDFRender_controlPanelInt__6bj87\",\"panelDiv\":\"PDFRender_panelDiv__3AHpa\",\"element\":\"PDFRender_element__351Pc\",\"text\":\"PDFRender_text__2x_yg\",\"hideIcon\":\"PDFRender_hideIcon__31C3M\",\"docToPrint\":\"PDFRender_docToPrint__1uDyZ\",\"pageNumber\":\"PDFRender_pageNumber__3rb8x\",\"inputZoom\":\"PDFRender_inputZoom__3MKqB\",\"clickable\":\"PDFRender_clickable__2A8EC\",\"disable\":\"PDFRender_disable__TFZl9\"};"],"sourceRoot":""}